declare_args() {
  # Build for Mac App Store.
  mac_mas_build = false
}

group("chromiumcontent") {
  deps = [
    ":libchromiumcontent",
    "//chrome/test/chromedriver",
  ]
}

# Override default compiler settings.
config("compiler") {
  defines = [
    # Force exporting icu's symbols.
    "U_COMBINED_IMPLEMENTATION",
    # Defining "U_COMBINED_IMPLEMENTATION" will add "explicit" for some
    # constructors, make sure it doesn' happen.
    "UNISTR_FROM_CHAR_EXPLICIT=",
    "UNISTR_FROM_STRING_EXPLICIT=",
    "U_NO_DEFAULT_INCLUDE_UTF_HEADERS=0",
  ]

  if (!is_component_build) {
   # Force exposign V8 symbols.
   defines += [ "BUILDING_V8_SHARED" ]
  }

  # Enable MAS buld.
  if (mac_mas_build) {
    defines += [ "MAS_BUILD" ]
  }
}

# Build as shared_library otherwise some static libraries will not build.
shared_library("libchromiumcontent") {
  sources = [ "empty.cc" ]

  deps = [
    "//components/prefs",
    "//components/cdm/renderer",
    "//components/cookie_config",
    "//components/devtools_discovery",
    "//components/devtools_http_handler",
    "//components/security_state",
    "//content/shell:pak",
    "//content/shell:copy_shell_resources",
    "//ppapi/host",
    "//ppapi/proxy",
    "//ppapi/shared_impl",
    "//third_party/webrtc/modules/desktop_capture",
    "//third_party/widevine/cdm:widevinecdmadapter",
    "//third_party/widevine/cdm:version_h",
  ]

  if (is_linux) {
    deps += [
      ":chromiumview",
      "//third_party/speech-dispatcher",
      "//third_party/mesa:osmesa",
    ]
  } else if (is_win) {
    deps += [
      "//pdf",
    ]
  }
}

if (is_linux) {
  group("chromiumviews") {
    deps = [
      "//ui/content_accelerators",
      "//ui/display",
      "//ui/display:util",
      "//ui/views/controls/webview",
      "//ui/views",
      "//ui/wm/wm",
    ]
  }
}
