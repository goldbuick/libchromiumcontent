diff --git a/content/browser/frame_host/render_widget_host_view_child_frame.cc b/content/browser/frame_host/render_widget_host_view_child_frame.cc
index f9d946b..1681f40 100644
--- a/content/browser/frame_host/render_widget_host_view_child_frame.cc
+++ b/content/browser/frame_host/render_widget_host_view_child_frame.cc
@@ -31,8 +31,10 @@
 #include "content/common/text_input_state.h"
 #include "content/common/view_messages.h"
 #include "content/public/browser/render_process_host.h"
+#include "content/public/browser/render_widget_host_view_frame_subscriber.h"
 #include "content/public/common/browser_plugin_guest_mode.h"
 #include "gpu/ipc/common/gpu_messages.h"
+#include "media/base/video_frame.h"
 #include "third_party/WebKit/public/web/WebInputEvent.h"
 #include "ui/gfx/geometry/size_conversions.h"
 #include "ui/gfx/geometry/size_f.h"
@@ -715,4 +717,26 @@ cc::SurfaceId RenderWidgetHostViewChildFrame::SurfaceIdForTesting() const {
   return surface_id_;
 };
 
+void RenderWidgetHostViewChildFrame::WillDrawSurface(
+    const cc::SurfaceId& id,
+    const gfx::Rect& damage_rect) {
+  if (id != surface_id_ || damage_rect.IsEmpty() || !frame_subscriber_.get())
+    return;
+
+  base::TimeTicks present_time;
+  scoped_refptr<media::VideoFrame> frame;
+  RenderWidgetHostViewFrameSubscriber::DeliverFrameCallback callback;
+  frame_subscriber_->ShouldCaptureFrame(damage_rect, present_time, &frame,
+                                        &callback);
+}
+
+void RenderWidgetHostViewChildFrame::BeginFrameSubscription(
+    std::unique_ptr<RenderWidgetHostViewFrameSubscriber> subscriber) {
+  frame_subscriber_ = std::move(subscriber);
+}
+
+void RenderWidgetHostViewChildFrame::EndFrameSubscription() {
+  frame_subscriber_.reset();
+}
+
 }  // namespace content
diff --git a/content/browser/frame_host/render_widget_host_view_child_frame.h b/content/browser/frame_host/render_widget_host_view_child_frame.h
index 97bcf88..98afe09 100644
--- a/content/browser/frame_host/render_widget_host_view_child_frame.h
+++ b/content/browser/frame_host/render_widget_host_view_child_frame.h
@@ -191,6 +191,12 @@ class CONTENT_EXPORT RenderWidgetHostViewChildFrame
   void RegisterSurfaceNamespaceId();
   void UnregisterSurfaceNamespaceId();
 
+  void WillDrawSurface(
+      const cc::SurfaceId& id, const gfx::Rect& damage_rect) override;
+  void BeginFrameSubscription(
+      std::unique_ptr<RenderWidgetHostViewFrameSubscriber> subscriber) override;
+  void EndFrameSubscription() override;
+
  protected:
   friend class RenderWidgetHostView;
   friend class RenderWidgetHostViewChildFrameTest;
@@ -245,6 +251,8 @@ class CONTENT_EXPORT RenderWidgetHostViewChildFrame
   // The surface client ID of the parent RenderWidgetHostView.  0 if none.
   uint32_t parent_surface_client_id_;
 
+  std::unique_ptr<RenderWidgetHostViewFrameSubscriber> frame_subscriber_;
+
   base::WeakPtrFactory<RenderWidgetHostViewChildFrame> weak_factory_;
   DISALLOW_COPY_AND_ASSIGN(RenderWidgetHostViewChildFrame);
 };
